// Задача 1
//Напишите функцию, которая принимает два числа и возвращает большее значение. 
//Вызов функции присвоить переменной и отобразить результат(переменную) в консоле

function numbers (a, b) {
    const res  = a > b ? a : b;
    return res;
}
    let result = numbers(50,90);
    console.log(result);
    console.log('Task 2 ####################################');

// Задача 2
//Напишите функцию, которая принимает строку и число n, а затем возвращает первые n символов строки. 
//Для отображения результа работы функции, вызовите её три раза с различными параметрами, 
//результат каждого вызова присвойте отдельной переменной и выведите переменные в консоль

function firstNSymbols(str, n) {
    // Используем метод slice для получения первых n символов строки
    return str.slice(0, n);
}

// Вызываем функцию с различными параметрами и сохраняем результаты в переменные
const result1 = firstNSymbols("i love", 5);
const result2 = firstNSymbols("JavaScript", 4);
const result3 = firstNSymbols("programming", 8);

// Выводим результаты в консоль
console.log(result1); // i lov
console.log(result2);  // Java
console.log(result3); // programm

console.log('Task 3 ####################################');

//Задача 3
//Напишите функцию, которая принимает массив и элемент, а затем возвращает true, 
//если элемент присутствует в массиве, и false в противном случае (если есть повторения заданного элемента в массиве, 
//то на задачу это никак не влияет). Результат вызова функции отобразите в консоле

function isInArray(arr, element) {
    // Используем метод includes для проверки наличия элемента в массиве
    return arr.includes(element);
}

// Заданный массив
const array = [1, 2, 3, 4, 5];

// Проверяем наличие элементов в массиве и выводим результаты в консоль
console.log(isInArray(array, 3)); // true
console.log(isInArray(array, 6)); // false

console.log('Task 4 ####################################');

// Задача4* :
// Есть массив чисел - отсортировать его методом пузырька.

function bubbleSort(arr) {
    const n = arr.length;
    // Внешний цикл проходит по всему массиву
    for (let i = 0; i < n - 1; i++) {
        // Внутренний цикл сравнивает и перемещает соседние элементы
        for (let j = 0; j < n - i - 1; j++) {
            // Если текущий элемент больше следующего, меняем их местами
            if (arr[j] > arr[j + 1]) {
                const temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
    return arr; // Возвращаем отсортированный массив
}

// Пример вызова функции с массивом чисел
const nums = [64, 34, 25, 12, 22, 11, 90];
console.log("Исходный массив:", nums);
const sortedNumbers = bubbleSort(nums);
console.log("Отсортированный массив:", sortedNumbers);